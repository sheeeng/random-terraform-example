# https://github.com/jasonetco/jasonetco/blob/master/.github/workflows/daily-updates.yml

name: terraform
on:
  push:
    branches:
      - "main"
      - "docs/**"
      - "feature/**"
      - "fix/**"
      - "wip/**"
  pull_request:
    branches:
      - "docs/**"
      - "feature/**"
      - "fix/**"
      - "wip/**"

jobs:
  updates:
    name: terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "\${PATH}: ${PATH}"
        shell: bash
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8
      - run: terraform fmt -check
        id: fmt
        continue-on-error: false
      - run: terraform fmt -recursive .
        continue-on-error: false
      - id: init
        run: terraform init
      - id: validate
        run: terraform validate -no-color
      - id: plan
        run: terraform plan
        continue-on-error: false
      - id: apply
        run: terraform apply -auto-approve
        continue-on-error: false
      - uses: actions/upload-artifact@v3
        if: ${{ success() }}
        with:
          name: terraform-state-file
          path: |
            ./**/*.tfstate
          retention-days: 7
      - uses: actions/github-script@v6
        if: |
          github.event_name == 'push' ||
          (github.event_name == 'pull_request' && github.head_ref == 'main')
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            #### Terraform Apply üö®\`${{ steps.apply.outcome }}\`

            <details><summary>Show Apply</summary>

            \`\`\`\n
            ${process.env.Apply}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
